name: Deploy Application

on:
  workflow_run:
    workflows: ["Build and Push Multi-Arch Docker Image"]
    types: [completed]
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Example: Deploy to your own server
    - name: Deploy to Server
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          # Pull latest image
          docker pull apurvwk/medical-report-analyser:latest
          
          # Stop old container
          docker stop pdf-processor || true
          docker rm pdf-processor || true
          
          # Start new container
          docker run -d \
            --name pdf-processor \
            -p 8080:8080 \
            -v /data/pdfs:/app/pdfs \
            --restart unless-stopped \
            apurvwk/medical-report-analyser:latest
          
          # Health check
          sleep 10
          curl -f http://localhost:8080/actuator/health || exit 1

    # Example: Deploy to Kubernetes
    # - name: Deploy to Kubernetes
    #   uses: azure/k8s-deploy@v1
    #   with:
    #     manifests: |
    #       k8s/deployment.yaml
    #       k8s/service.yaml
    #     images: |
    #       apurvwk/medical-report-analyser:${{ github.sha }}

    # Example: Deploy to AWS ECS
    # - name: Deploy to ECS
    #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
    #   with:
    #     task-definition: task-definition.json
    #     service: pdf-processor-service
    #     cluster: production-cluster 